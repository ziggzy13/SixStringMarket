package com.sixstringmarket.util;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

/**
 * –ü–æ–º–æ—â–µ–Ω –∫–ª–∞—Å –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Å—É—Ä—Å–Ω–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –∏–∫–æ–Ω–∏ –∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
 * –¢—Ä—è–±–≤–∞ –¥–∞ —Å–µ –∏–∑–ø—ä–ª–Ω–∏ –µ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –ø—Ä–∏ –ø—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–æ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –∏–ª–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
 */
public class AppIconCreator {
    
    public static void main(String[] args) {
        createResourceDirectories();
        createDefaultIcons();
        System.out.println("–ì–æ—Ç–æ–≤–æ. –í—Å–∏—á–∫–∏ —Ä–µ—Å—É—Ä—Å–Ω–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –∏–∫–æ–Ω–∏ —Å–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ.");
    }
    
    /**
     * –°—ä–∑–¥–∞–≤–∞ —Ä–µ—Å—É—Ä—Å–Ω–∏—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∞–∫–æ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—Ç
     */
    private static void createResourceDirectories() {
        try {
            // –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–∞—Ç–∞ —Ä–µ—Å—É—Ä—Å–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
            Path resourcesDir = Paths.get("resources");
            if (!Files.exists(resourcesDir)) {
                Files.createDirectories(resourcesDir);
                System.out.println("–°—ä–∑–¥–∞–¥–µ–Ω–∞ –µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: resources");
            }
            
            // –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            String[] subdirs = {"images", "icons", "config", "images/guitars", "images/users"};
            for (String subdir : subdirs) {
                Path path = Paths.get("resources", subdir);
                if (!Files.exists(path)) {
                    Files.createDirectories(path);
                    System.out.println("–°—ä–∑–¥–∞–¥–µ–Ω–∞ –µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: resources/" + subdir);
                }
            }
        } catch (IOException e) {
            System.err.println("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * –°—ä–∑–¥–∞–≤–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ç–µ –∏–∫–æ–Ω–∏ –∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
     */
    private static void createDefaultIcons() {
        // –ò–∫–æ–Ω–∞ –Ω–∞ –∫–∏—Ç–∞—Ä–∞
        createGuitarIcon("resources/icons/guitar_icon.png", 64, 64);
        createGuitarIcon("resources/icons/guitar_small.png", 32, 32);
        
        // –õ–æ–≥–æ
        createGuitarIcon("resources/icons/logo.png", 128, 128);
        
        // –î—Ä—É–≥–∏ –∏–∫–æ–Ω–∏
        createCircleIcon("resources/icons/user.png", 32, new Color(66, 103, 178), "üë§", 18);
        createCircleIcon("resources/icons/cart.png", 32, new Color(240, 98, 146), "üõí", 18);
        createCircleIcon("resources/icons/save.png", 32, new Color(76, 175, 80), "üíæ", 18);
        createCircleIcon("resources/icons/search.png", 32, new Color(103, 58, 183), "üîç", 18);
        createCircleIcon("resources/icons/settings.png", 32, new Color(33, 33, 33), "‚öôÔ∏è", 18);
    }
    
    /**
     * –°—ä–∑–¥–∞–≤–∞ –∏–∫–æ–Ω–∞ –Ω–∞ –∫–∏—Ç–∞—Ä–∞
     * @param filePath –ü—ä—Ç –¥–æ —Ñ–∞–π–ª–∞
     * @param width –®–∏—Ä–∏–Ω–∞
     * @param height –í–∏—Å–æ—á–∏–Ω–∞
     */
    private static void createGuitarIcon(String filePath, int width, int height) {
        try {
            BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2d = image.createGraphics();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ –∞–Ω—Ç–∏-–∞–ª–∏–∞—Å–∏–Ω–≥
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
            
            // –¶–≤–µ—Ç–æ–≤–µ
            Color mainColor = new Color(66, 103, 178);
            Color secondaryColor = new Color(53, 92, 151);
            
            // –¢—è–ª–æ –Ω–∞ –∫–∏—Ç–∞—Ä–∞—Ç–∞ (–µ–ª–∏–ø—Å–∞)
            g2d.setColor(mainColor);
            g2d.fillOval(width/4, height/3, width/2, height*2/3);
            
            // –ì—Ä–∏—Ñ—ä—Ç –Ω–∞ –∫–∏—Ç–∞—Ä–∞—Ç–∞
            g2d.setColor(secondaryColor);
            g2d.fillRect(width*3/8, 0, width/4, height/2);
            
            // –°—Ç—Ä—É–Ω–∏
            g2d.setColor(Color.WHITE);
            g2d.setStroke(new BasicStroke(1.5f));
            for (int i = 0; i < 6; i++) {
                int yPos = height/4 + i * height/30;
                g2d.drawLine(width*3/8, yPos, width*5/8, yPos);
            }
            
            // –†–µ–∑–æ–Ω–∞—Ç–æ—Ä–µ–Ω –æ—Ç–≤–æ—Ä
            g2d.setColor(new Color(240, 240, 240));
            g2d.fillOval(width*3/8, height/2, width/4, width/4);
            
            g2d.dispose();
            
            // –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ
            File outputFile = new File(filePath);
            outputFile.getParentFile().mkdirs(); // –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞, –∞–∫–æ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
            ImageIO.write(image, "PNG", outputFile);
            
            System.out.println("–°—ä–∑–¥–∞–¥–µ–Ω–∞ –µ –∏–∫–æ–Ω–∞: " + filePath);
        } catch (IOException e) {
            System.err.println("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–∫–æ–Ω–∞: " + e.getMessage());
        }
    }
    
    /**
     * –°—ä–∑–¥–∞–≤–∞ –∫—Ä—ä–≥–ª–∞ –∏–∫–æ–Ω–∞ —Å—ä—Å —Å–∏–º–≤–æ–ª
     * @param filePath –ü—ä—Ç –¥–æ —Ñ–∞–π–ª–∞
     * @param size –†–∞–∑–º–µ—Ä
     * @param color –¶–≤—è—Ç
     * @param symbol –°–∏–º–≤–æ–ª (emoji –∏–ª–∏ —Ç–µ–∫—Å—Ç)
     * @param fontSize –†–∞–∑–º–µ—Ä –Ω–∞ —à—Ä–∏—Ñ—Ç–∞
     */
    private static void createCircleIcon(String filePath, int size, Color color, String symbol, int fontSize) {
        try {
            BufferedImage image = new BufferedImage(size, size, BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2d = image.createGraphics();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ –∞–Ω—Ç–∏-–∞–ª–∏–∞—Å–∏–Ω–≥
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
            
            // –†–∏—Å—É–≤–∞–Ω–µ –Ω–∞ –∫—Ä—ä–≥
            g2d.setColor(color);
            g2d.fillOval(0, 0, size, size);
            
            // –†–∏—Å—É–≤–∞–Ω–µ –Ω–∞ —Å–∏–º–≤–æ–ª–∞
            g2d.setColor(Color.WHITE);
            g2d.setFont(new Font("Segoe UI Emoji", Font.PLAIN, fontSize));
            
            FontMetrics fm = g2d.getFontMetrics();
            int textWidth = fm.stringWidth(symbol);
            int textHeight = fm.getHeight();
            
            // –¶–µ–Ω—Ç—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∏–º–≤–æ–ª–∞
            g2d.drawString(symbol, 
                (size - textWidth) / 2, 
                (size - textHeight) / 2 + fm.getAscent());
            
            g2d.dispose();
            
            // –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ
            File outputFile = new File(filePath);
            outputFile.getParentFile().mkdirs();
            ImageIO.write(image, "PNG", outputFile);
            
            System.out.println("–°—ä–∑–¥–∞–¥–µ–Ω–∞ –µ –∏–∫–æ–Ω–∞: " + filePath);
        } catch (IOException e) {
            System.err.println("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–∫–æ–Ω–∞: " + e.getMessage());
        }
    }
}